name: CI Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/test_db
      DJANGO_SETTINGS_MODULE: your_project.settings
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run linting
        run: |
          pip install flake8
          flake8 backend/

      - name: Run tests
        run: |
          python backend/manage.py test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: yourdockerhubusername/yourproject:latest

      - name: Docker Compose Build
        run: docker-compose -f docker-compose.yml build

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm install
          VUE_APP_URL=${{ secrets.VUE_APP_URL }} VUE_APP_BASE_URL=${{ secrets.VUE_APP_BASE_URL }} npm run build
